{"remainingRequest":"/Users/yankaikuo/Transor/transor-extension/node_modules/babel-loader/lib/index.js!/Users/yankaikuo/Transor/transor-extension/node_modules/vue-loader/lib/loaders/templateLoader.js??ref--6!/Users/yankaikuo/Transor/transor-extension/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/yankaikuo/Transor/transor-extension/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yankaikuo/Transor/transor-extension/src/components/TranslationSettings.vue?vue&type=template&id=39edeb0e&scoped=true","dependencies":[{"path":"/Users/yankaikuo/Transor/transor-extension/src/components/TranslationSettings.vue","mtime":1748443805337},{"path":"/Users/yankaikuo/Transor/transor-extension/node_modules/cache-loader/dist/cjs.js","mtime":1744643640207},{"path":"/Users/yankaikuo/Transor/transor-extension/node_modules/cache-loader/dist/cjs.js","mtime":1744643640207},{"path":"/Users/yankaikuo/Transor/transor-extension/node_modules/babel-loader/lib/index.js","mtime":1744643640966},{"path":"/Users/yankaikuo/Transor/transor-extension/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1744643641495},{"path":"/Users/yankaikuo/Transor/transor-extension/node_modules/cache-loader/dist/cjs.js","mtime":1744643640207},{"path":"/Users/yankaikuo/Transor/transor-extension/node_modules/vue-loader/lib/index.js","mtime":1744643641085}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}